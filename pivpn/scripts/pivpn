#!/bin/bash

# Constants
check_pkg_installed='dpkg-query -s'
script_dir="/opt/pivpn"

# Functions
err() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >&2
}

uninstall_server() {
  "${sudo}" "${script_dir}/uninstall.sh"
  exit "$?"
}

backup() {
  "${sudo}" "${script_dir}/backup.sh"
  exit "$?"
}

show_help() {
  cat <<-EOF
  ::: To pass off to the pivpn command for each protocol
  :::
  ::: Usage: pivpn <protocol> <command> [option]
  ::: 
  :::  -h,  help             Show this help dialog
  :::  -u,  uninstall        Uninstall pivpn from your system!
  :::  -bk, backup           Backup VPN configs and user profiles
  EOF
  exit 0
}

# Fail on errors, unset variables, and non-zero exit codes in pipes
set -euo pipefail

# Must be root to use this tool
if [[ "${EUID}" -ne 0 ]]; then
  if ! ${check_pkg_installed} sudo &> /dev/null; then
    err "::: Please install sudo or run this as root."
    exit 1
  fi
  export sudo="sudo"
fi

if grep -qsEe "^NAME=['\"]?Alpine[a-zA-Z ]*['\"]?$" /etc/os-release; then
  check_pkg_installed='apk --no-cache info -e'
fi

if [[ "$#" == 0 ]]; then
  show_help
fi

# Handle redirecting to specific functions based on arguments
case "${1}" in
  wg)
    "${script_dir}/wireguard/pivpn.sh" "${@:2}"
    ;;
  ovpn)
    "${script_dir}/openvpn/pivpn.sh" "${@:2}"
    ;;
  "-h" | "help")
    show_help
    ;;
  "-u" | "uninstall")
    uninstall_server
    ;;
  "-bk" | "backup")
    backup
    ;;
  *)
    show_help
    ;;
esac
